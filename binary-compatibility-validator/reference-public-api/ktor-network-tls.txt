public final class io/ktor/network/tls/CIOCipherSuites {
	public static final field INSTANCE Lio/ktor/network/tls/CIOCipherSuites;
	public final fun getECDHE_ECDSA_AES128_SHA256 ()Lio/ktor/network/tls/CipherSuite;
	public final fun getECDHE_ECDSA_AES256_SHA384 ()Lio/ktor/network/tls/CipherSuite;
	public final fun getECDHE_RSA_AES128_SHA256 ()Lio/ktor/network/tls/CipherSuite;
	public final fun getECDHE_RSA_AES256_SHA384 ()Lio/ktor/network/tls/CipherSuite;
	public final fun getSupportedSuites ()Ljava/util/List;
	public final fun getTLS_RSA_WITH_AES128_CBC_SHA ()Lio/ktor/network/tls/CipherSuite;
	public final fun getTLS_RSA_WITH_AES256_CBC_SHA ()Lio/ktor/network/tls/CipherSuite;
	public final fun getTLS_RSA_WITH_AES_128_GCM_SHA256 ()Lio/ktor/network/tls/CipherSuite;
}

public final class io/ktor/network/tls/CipherSuite {
	public fun <init> (SLjava/lang/String;Ljava/lang/String;Lio/ktor/network/tls/SecretExchangeType;Ljava/lang/String;IIIILjava/lang/String;ILio/ktor/network/tls/extensions/HashAlgorithm;Lio/ktor/network/tls/extensions/SignatureAlgorithm;Lio/ktor/network/tls/CipherType;)V
	public synthetic fun <init> (SLjava/lang/String;Ljava/lang/String;Lio/ktor/network/tls/SecretExchangeType;Ljava/lang/String;IIIILjava/lang/String;ILio/ktor/network/tls/extensions/HashAlgorithm;Lio/ktor/network/tls/extensions/SignatureAlgorithm;Lio/ktor/network/tls/CipherType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()S
	public final fun component10 ()Ljava/lang/String;
	public final fun component11 ()I
	public final fun component12 ()Lio/ktor/network/tls/extensions/HashAlgorithm;
	public final fun component13 ()Lio/ktor/network/tls/extensions/SignatureAlgorithm;
	public final fun component14 ()Lio/ktor/network/tls/CipherType;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Lio/ktor/network/tls/SecretExchangeType;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()I
	public final fun component7 ()I
	public final fun component8 ()I
	public final fun component9 ()I
	public final fun copy (SLjava/lang/String;Ljava/lang/String;Lio/ktor/network/tls/SecretExchangeType;Ljava/lang/String;IIIILjava/lang/String;ILio/ktor/network/tls/extensions/HashAlgorithm;Lio/ktor/network/tls/extensions/SignatureAlgorithm;Lio/ktor/network/tls/CipherType;)Lio/ktor/network/tls/CipherSuite;
	public static synthetic fun copy$default (Lio/ktor/network/tls/CipherSuite;SLjava/lang/String;Ljava/lang/String;Lio/ktor/network/tls/SecretExchangeType;Ljava/lang/String;IIIILjava/lang/String;ILio/ktor/network/tls/extensions/HashAlgorithm;Lio/ktor/network/tls/extensions/SignatureAlgorithm;Lio/ktor/network/tls/CipherType;ILjava/lang/Object;)Lio/ktor/network/tls/CipherSuite;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCipherTagSizeInBytes ()I
	public final fun getCipherType ()Lio/ktor/network/tls/CipherType;
	public final fun getCode ()S
	public final fun getExchangeType ()Lio/ktor/network/tls/SecretExchangeType;
	public final fun getFixedIvLength ()I
	public final fun getHash ()Lio/ktor/network/tls/extensions/HashAlgorithm;
	public final fun getIvLength ()I
	public final fun getJdkCipherName ()Ljava/lang/String;
	public final fun getKeyStrength ()I
	public final fun getKeyStrengthInBytes ()I
	public final fun getMacName ()Ljava/lang/String;
	public final fun getMacStrength ()I
	public final fun getMacStrengthInBytes ()I
	public final fun getName ()Ljava/lang/String;
	public final fun getOpenSSLName ()Ljava/lang/String;
	public final fun getSignatureAlgorithm ()Lio/ktor/network/tls/extensions/SignatureAlgorithm;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/network/tls/CipherType : java/lang/Enum {
	public static final field CBC Lio/ktor/network/tls/CipherType;
	public static final field GCM Lio/ktor/network/tls/CipherType;
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/network/tls/CipherType;
	public static fun values ()[Lio/ktor/network/tls/CipherType;
}

public final class io/ktor/network/tls/SecretExchangeType : java/lang/Enum {
	public static final field ECDHE Lio/ktor/network/tls/SecretExchangeType;
	public static final field RSA Lio/ktor/network/tls/SecretExchangeType;
	public final fun getJvmName ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/network/tls/SecretExchangeType;
	public static fun values ()[Lio/ktor/network/tls/SecretExchangeType;
}

public final class io/ktor/network/tls/ServerKeyExchangeType : java/lang/Enum {
	public static final field Companion Lio/ktor/network/tls/ServerKeyExchangeType$Companion;
	public static final field ExplicitChar Lio/ktor/network/tls/ServerKeyExchangeType;
	public static final field ExplicitPrime Lio/ktor/network/tls/ServerKeyExchangeType;
	public static final field NamedCurve Lio/ktor/network/tls/ServerKeyExchangeType;
	public final fun getCode ()I
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/network/tls/ServerKeyExchangeType;
	public static fun values ()[Lio/ktor/network/tls/ServerKeyExchangeType;
}

public final class io/ktor/network/tls/ServerKeyExchangeType$Companion {
	public final fun byCode (I)Lio/ktor/network/tls/ServerKeyExchangeType;
}

public final class io/ktor/network/tls/TLSAlertLevel : java/lang/Enum {
	public static final field Companion Lio/ktor/network/tls/TLSAlertLevel$Companion;
	public static final field FATAL Lio/ktor/network/tls/TLSAlertLevel;
	public static final field WARNING Lio/ktor/network/tls/TLSAlertLevel;
	public final fun getCode ()I
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/network/tls/TLSAlertLevel;
	public static fun values ()[Lio/ktor/network/tls/TLSAlertLevel;
}

public final class io/ktor/network/tls/TLSAlertLevel$Companion {
	public final fun byCode (I)Lio/ktor/network/tls/TLSAlertLevel;
}

public final class io/ktor/network/tls/TLSAlertType : java/lang/Enum {
	public static final field AccessDenied Lio/ktor/network/tls/TLSAlertType;
	public static final field BadCertificate Lio/ktor/network/tls/TLSAlertType;
	public static final field BadRecordMac Lio/ktor/network/tls/TLSAlertType;
	public static final field CertificateExpired Lio/ktor/network/tls/TLSAlertType;
	public static final field CertificateRevoked Lio/ktor/network/tls/TLSAlertType;
	public static final field CertificateUnknown Lio/ktor/network/tls/TLSAlertType;
	public static final field CloseNotify Lio/ktor/network/tls/TLSAlertType;
	public static final field Companion Lio/ktor/network/tls/TLSAlertType$Companion;
	public static final field DecodeError Lio/ktor/network/tls/TLSAlertType;
	public static final field DecompressionFailure Lio/ktor/network/tls/TLSAlertType;
	public static final field DecryptError Lio/ktor/network/tls/TLSAlertType;
	public static final field DecryptionFailed_RESERVED Lio/ktor/network/tls/TLSAlertType;
	public static final field ExportRestriction_RESERVED Lio/ktor/network/tls/TLSAlertType;
	public static final field HandshakeFailure Lio/ktor/network/tls/TLSAlertType;
	public static final field IllegalParameter Lio/ktor/network/tls/TLSAlertType;
	public static final field InsufficientSecurity Lio/ktor/network/tls/TLSAlertType;
	public static final field InternalError Lio/ktor/network/tls/TLSAlertType;
	public static final field NoCertificate_RESERVED Lio/ktor/network/tls/TLSAlertType;
	public static final field NoRenegotiation Lio/ktor/network/tls/TLSAlertType;
	public static final field ProtocolVersion Lio/ktor/network/tls/TLSAlertType;
	public static final field RecordOverflow Lio/ktor/network/tls/TLSAlertType;
	public static final field UnexpectedMessage Lio/ktor/network/tls/TLSAlertType;
	public static final field UnknownCa Lio/ktor/network/tls/TLSAlertType;
	public static final field UnsupportedCertificate Lio/ktor/network/tls/TLSAlertType;
	public static final field UnsupportedExtension Lio/ktor/network/tls/TLSAlertType;
	public static final field UserCanceled Lio/ktor/network/tls/TLSAlertType;
	public final fun getCode ()I
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/network/tls/TLSAlertType;
	public static fun values ()[Lio/ktor/network/tls/TLSAlertType;
}

public final class io/ktor/network/tls/TLSAlertType$Companion {
	public final fun byCode (I)Lio/ktor/network/tls/TLSAlertType;
}

public final class io/ktor/network/tls/TLSHandshake {
	public fun <init> ()V
	public final fun getPacket ()Lkotlinx/io/core/ByteReadPacket;
	public final fun getType ()Lio/ktor/network/tls/TLSHandshakeType;
	public final fun setPacket (Lkotlinx/io/core/ByteReadPacket;)V
	public final fun setType (Lio/ktor/network/tls/TLSHandshakeType;)V
}

public final class io/ktor/network/tls/TLSHandshakeType : java/lang/Enum {
	public static final field Certificate Lio/ktor/network/tls/TLSHandshakeType;
	public static final field CertificateRequest Lio/ktor/network/tls/TLSHandshakeType;
	public static final field CertificateVerify Lio/ktor/network/tls/TLSHandshakeType;
	public static final field ClientHello Lio/ktor/network/tls/TLSHandshakeType;
	public static final field ClientKeyExchange Lio/ktor/network/tls/TLSHandshakeType;
	public static final field Companion Lio/ktor/network/tls/TLSHandshakeType$Companion;
	public static final field Finished Lio/ktor/network/tls/TLSHandshakeType;
	public static final field HelloRequest Lio/ktor/network/tls/TLSHandshakeType;
	public static final field ServerDone Lio/ktor/network/tls/TLSHandshakeType;
	public static final field ServerHello Lio/ktor/network/tls/TLSHandshakeType;
	public static final field ServerKeyExchange Lio/ktor/network/tls/TLSHandshakeType;
	public final fun getCode ()I
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/network/tls/TLSHandshakeType;
	public static fun values ()[Lio/ktor/network/tls/TLSHandshakeType;
}

public final class io/ktor/network/tls/TLSHandshakeType$Companion {
	public final fun byCode (I)Lio/ktor/network/tls/TLSHandshakeType;
}

public final class io/ktor/network/tls/TLSKt {
	public static final fun tls (Lio/ktor/network/sockets/Socket;Lkotlin/coroutines/CoroutineContext;Ljavax/net/ssl/X509TrustManager;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun tls$default (Lio/ktor/network/sockets/Socket;Lkotlin/coroutines/CoroutineContext;Ljavax/net/ssl/X509TrustManager;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class io/ktor/network/tls/TLSRecord {
	public fun <init> ()V
	public fun <init> (Lio/ktor/network/tls/TLSRecordType;Lio/ktor/network/tls/TLSVersion;Lkotlinx/io/core/ByteReadPacket;)V
	public synthetic fun <init> (Lio/ktor/network/tls/TLSRecordType;Lio/ktor/network/tls/TLSVersion;Lkotlinx/io/core/ByteReadPacket;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getPacket ()Lkotlinx/io/core/ByteReadPacket;
	public final fun getType ()Lio/ktor/network/tls/TLSRecordType;
	public final fun getVersion ()Lio/ktor/network/tls/TLSVersion;
}

public final class io/ktor/network/tls/TLSRecordType : java/lang/Enum {
	public static final field Alert Lio/ktor/network/tls/TLSRecordType;
	public static final field ApplicationData Lio/ktor/network/tls/TLSRecordType;
	public static final field ChangeCipherSpec Lio/ktor/network/tls/TLSRecordType;
	public static final field Companion Lio/ktor/network/tls/TLSRecordType$Companion;
	public static final field Handshake Lio/ktor/network/tls/TLSRecordType;
	public final fun getCode ()I
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/network/tls/TLSRecordType;
	public static fun values ()[Lio/ktor/network/tls/TLSRecordType;
}

public final class io/ktor/network/tls/TLSRecordType$Companion {
	public final fun byCode (I)Lio/ktor/network/tls/TLSRecordType;
}

public final class io/ktor/network/tls/TLSVersion : java/lang/Enum {
	public static final field Companion Lio/ktor/network/tls/TLSVersion$Companion;
	public static final field SSL3 Lio/ktor/network/tls/TLSVersion;
	public static final field TLS10 Lio/ktor/network/tls/TLSVersion;
	public static final field TLS11 Lio/ktor/network/tls/TLSVersion;
	public static final field TLS12 Lio/ktor/network/tls/TLSVersion;
	public final fun getCode ()I
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/network/tls/TLSVersion;
	public static fun values ()[Lio/ktor/network/tls/TLSVersion;
}

public final class io/ktor/network/tls/TLSVersion$Companion {
	public final fun byCode (I)Lio/ktor/network/tls/TLSVersion;
}

public final class io/ktor/network/tls/certificates/BuildersKt {
	public static final fun buildKeyStore (Lkotlin/jvm/functions/Function1;)Ljava/security/KeyStore;
	public static final fun saveToFile (Ljava/security/KeyStore;Ljava/io/File;Ljava/lang/String;)V
}

public final class io/ktor/network/tls/certificates/CertificateBuilder {
	public field hash Lio/ktor/network/tls/extensions/HashAlgorithm;
	public field password Ljava/lang/String;
	public field sign Lio/ktor/network/tls/extensions/SignatureAlgorithm;
	public final fun getDaysValid ()J
	public final fun getHash ()Lio/ktor/network/tls/extensions/HashAlgorithm;
	public final fun getKeySizeInBits ()I
	public final fun getPassword ()Ljava/lang/String;
	public final fun getSign ()Lio/ktor/network/tls/extensions/SignatureAlgorithm;
	public final fun setDaysValid (J)V
	public final fun setHash (Lio/ktor/network/tls/extensions/HashAlgorithm;)V
	public final fun setKeySizeInBits (I)V
	public final fun setPassword (Ljava/lang/String;)V
	public final fun setSign (Lio/ktor/network/tls/extensions/SignatureAlgorithm;)V
}

public final class io/ktor/network/tls/certificates/CertificatesKt {
	public static final fun generateCertificate (Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/security/KeyStore;
	public static synthetic fun generateCertificate$default (Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILjava/lang/Object;)Ljava/security/KeyStore;
}

public final class io/ktor/network/tls/certificates/KeyStoreBuilder {
	public final fun certificate (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
}

public final class io/ktor/network/tls/extensions/HashAlgorithm : java/lang/Enum {
	public static final field Companion Lio/ktor/network/tls/extensions/HashAlgorithm$Companion;
	public static final field MD5 Lio/ktor/network/tls/extensions/HashAlgorithm;
	public static final field NONE Lio/ktor/network/tls/extensions/HashAlgorithm;
	public static final field SHA1 Lio/ktor/network/tls/extensions/HashAlgorithm;
	public static final field SHA224 Lio/ktor/network/tls/extensions/HashAlgorithm;
	public static final field SHA256 Lio/ktor/network/tls/extensions/HashAlgorithm;
	public static final field SHA384 Lio/ktor/network/tls/extensions/HashAlgorithm;
	public static final field SHA512 Lio/ktor/network/tls/extensions/HashAlgorithm;
	public final fun getCode ()B
	public final fun getMacName ()Ljava/lang/String;
	public final fun getOpenSSLName ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/network/tls/extensions/HashAlgorithm;
	public static fun values ()[Lio/ktor/network/tls/extensions/HashAlgorithm;
}

public final class io/ktor/network/tls/extensions/HashAlgorithm$Companion {
	public final fun byCode (B)Lio/ktor/network/tls/extensions/HashAlgorithm;
}

public final class io/ktor/network/tls/extensions/HashAndSign {
	public fun <init> (BB)V
	public fun <init> (Lio/ktor/network/tls/extensions/HashAlgorithm;Lio/ktor/network/tls/extensions/SignatureAlgorithm;)V
	public final fun component1 ()Lio/ktor/network/tls/extensions/HashAlgorithm;
	public final fun component2 ()Lio/ktor/network/tls/extensions/SignatureAlgorithm;
	public final fun copy (Lio/ktor/network/tls/extensions/HashAlgorithm;Lio/ktor/network/tls/extensions/SignatureAlgorithm;)Lio/ktor/network/tls/extensions/HashAndSign;
	public static synthetic fun copy$default (Lio/ktor/network/tls/extensions/HashAndSign;Lio/ktor/network/tls/extensions/HashAlgorithm;Lio/ktor/network/tls/extensions/SignatureAlgorithm;ILjava/lang/Object;)Lio/ktor/network/tls/extensions/HashAndSign;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHash ()Lio/ktor/network/tls/extensions/HashAlgorithm;
	public final fun getName ()Ljava/lang/String;
	public final fun getSign ()Lio/ktor/network/tls/extensions/SignatureAlgorithm;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/network/tls/extensions/NamedCurve : java/lang/Enum {
	public static final field Companion Lio/ktor/network/tls/extensions/NamedCurve$Companion;
	public static final field secp160k1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field secp160r1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field secp160r2 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field secp192k1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field secp192r1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field secp224k1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field secp224r1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field secp256k1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field secp256r1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field secp384r1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field secp521r1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field sect163k1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field sect163r1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field sect163r2 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field sect193r1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field sect193r2 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field sect233k1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field sect233r1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field sect239k1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field sect283k1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field sect283r1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field sect409k1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field sect409r1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field sect571k1 Lio/ktor/network/tls/extensions/NamedCurve;
	public static final field sect571r1 Lio/ktor/network/tls/extensions/NamedCurve;
	public final fun getCode ()S
	public final fun getFieldSize ()I
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/network/tls/extensions/NamedCurve;
	public static fun values ()[Lio/ktor/network/tls/extensions/NamedCurve;
}

public final class io/ktor/network/tls/extensions/NamedCurve$Companion {
	public final fun fromCode (S)Lio/ktor/network/tls/extensions/NamedCurve;
}

public final class io/ktor/network/tls/extensions/NamedCurvesKt {
	public static final fun getSupportedNamedCurves ()Ljava/util/List;
}

public final class io/ktor/network/tls/extensions/PointFormat : java/lang/Enum {
	public static final field ANSIX962_COMPRESSED_CHAR2 Lio/ktor/network/tls/extensions/PointFormat;
	public static final field ANSIX962_COMPRESSED_PRIME Lio/ktor/network/tls/extensions/PointFormat;
	public static final field UNCOMPRESSED Lio/ktor/network/tls/extensions/PointFormat;
	public final fun getCode ()B
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/network/tls/extensions/PointFormat;
	public static fun values ()[Lio/ktor/network/tls/extensions/PointFormat;
}

public final class io/ktor/network/tls/extensions/PointFormatKt {
	public static final fun getSupportedPointFormats ()Ljava/util/List;
}

public final class io/ktor/network/tls/extensions/SignatureAlgorithm : java/lang/Enum {
	public static final field ANON Lio/ktor/network/tls/extensions/SignatureAlgorithm;
	public static final field Companion Lio/ktor/network/tls/extensions/SignatureAlgorithm$Companion;
	public static final field ECDSA Lio/ktor/network/tls/extensions/SignatureAlgorithm;
	public static final field RSA Lio/ktor/network/tls/extensions/SignatureAlgorithm;
	public final fun getCode ()B
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/network/tls/extensions/SignatureAlgorithm;
	public static fun values ()[Lio/ktor/network/tls/extensions/SignatureAlgorithm;
}

public final class io/ktor/network/tls/extensions/SignatureAlgorithm$Companion {
	public final fun byCode (B)Lio/ktor/network/tls/extensions/SignatureAlgorithm;
}

public final class io/ktor/network/tls/extensions/SignatureAlgorithmKt {
	public static final fun getSupportedSignatureAlgorithms ()Ljava/util/List;
}

